C51 COMPILER V9.53.0.0   EFM8SB10F8G_A_QFN20_MAIN                                          01/14/2018 19:16:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8SB10F8G_A_QFN20_MAIN
OBJECT MODULE PLACED IN .\src/EFM8SB10F8G-A-QFN20_main.OBJ
COMPILER INVOKED BY: Z:\home\alex\tools\SimplicityStudio_v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/alex/S
                    -implicityStudio/v4_workspace/EFM8SB10F8G-A-QFN20/src/EFM8SB10F8G-A-QFN20_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE)
                    - WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/alex/Simplici
                    -tyStudio/v4_workspace/EFM8SB10F8G-A-QFN20/inc;/home/alex/tools/SimplicityStudio_v4/developer/sdks/8051/v4.0.9//Device/sh
                    -ared/si8051Base;/home/alex/tools/SimplicityStudio_v4/developer/sdks/8051/v4.0.9//Device/shared/si8051base;/home/alex/too
                    -ls/SimplicityStudio_v4/developer/sdks/8051/v4.0.9//Device/EFM8SB1/inc;/home/alex/tools/SimplicityStudio_v4/developer/sdk
                    -s/8051/v4.0.9//Device/EFM8SB1/peripheral_driver/inc) PRINT(.\src/EFM8SB10F8G-A-QFN20_main.lst) COND PAGEWIDTH(120) PAGEL
                    -ENGTH(65) OBJECT(.\src/EFM8SB10F8G-A-QFN20_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/EFM8SB10F8G-A-QFN20_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8SB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include "peripherals.h"
  15          #include <smb_0.h>
  16          #include <stdint.h>
  17          #include "power.h"
  18          #include "SmaRTClock.h"
  19          
  20          // $[Generated Includes]
  21          // [Generated Includes]$
  22          
  23          #define UHOME_ID 0x09
  24          
  25          //#define UHOME_TEMP
  26          #define UHOME_HUM
  27          //#define UHOME_REED
  28          //#define UHOME_PRESS
  29          //#define UHOME_NONE
  30          
  31          #ifdef UHOME_TEMP
              #define UHOME_TYPE 0xAA
              #define UHOME_TXLEN 8
              #define UHOME_TX_DELAY 100000
              #endif
  36          
  37          #ifdef UHOME_HUM
  38          #define UHOME_TYPE 0xAB
  39          #define UHOME_TXLEN 10
  40          #define UHOME_TX_DELAY 140000
  41          #endif
  42          
  43          #ifdef UHOME_NONE
              #define UHOME_TYPE 0x00
              #define UHOME_TXLEN 8
              #define UHOME_TX_DELAY 100000
              #endif
  48          
  49          uint32_t SI_SEG_XDATA delayi;
C51 COMPILER V9.53.0.0   EFM8SB10F8G_A_QFN20_MAIN                                          01/14/2018 19:16:25 PAGE 2   

  50          uint8_t SI_SEG_XDATA dbuf[10];
  51          uint8_t SI_SEG_XDATA state = 0;
  52          
  53          SI_SBIT (SI4012_SDN, SFR_P1, 0);
  54          SI_SBIT (SI4012_IRQ, SFR_P0, 7);
  55          SI_SBIT (SDA, SFR_P0, 0);
  56          SI_SBIT (SCL, SFR_P0, 1);
  57          
  58          //-----------------------------------------------------------------------------
  59          // SiLabs_Startup() Routine
  60          // ----------------------------------------------------------------------------
  61          // This function is called immediately after reset, before the initialization
  62          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  63          // useful place to disable the watchdog timer, which is enable by default
  64          // and may trigger before main() in some instances.
  65          //-----------------------------------------------------------------------------
  66          void SiLabs_Startup(void) {
  67   1      
  68   1      }
  69          
  70          //-----------------------------------------------------------------------------
  71          // main() Routine
  72          // ----------------------------------------------------------------------------
  73          int main(void) {
  74   1              uint16_t SI_SEG_XDATA
  75   1              temp, bat;
  76   1      
  77   1              // Debug trap
  78   1              while (!SCL)
  79   1                      ;
  80   1      
  81   1              // Call hardware initialization routine
  82   1              enter_DefaultMode_from_RESET();
  83   1      
  84   1              dbuf[0] = 0xAA;
  85   1              dbuf[1] = 0xFF;
  86   1              dbuf[2] = UHOME_TYPE;
  87   1              dbuf[3] = UHOME_ID; // ID
  88   1              dbuf[4] = 0x00; // Temp1
  89   1              dbuf[5] = 0x00; // Temp2
  90   1              dbuf[6] = 0x00; // Bat1
  91   1              dbuf[7] = 0x00; // Bat2
  92   1              dbuf[8] = 0x00;
  93   1              dbuf[9] = 0x00;
  94   1      
  95   1              SMB0_reset();
  96   1              SMB0_init(SMB0_TIMER1, true);
  97   1      
  98   1              // keep this so that the chip can be programmed
  99   1              for (delayi = 500000; delayi > 0; delayi--)
 100   1                      ;
 101   1      
 102   1              // enable low power stuff
 103   1              RTC0CN0_Local = 0xC0;
 104   1              RTC0CN0_SetBits(RTC0TR + RTC0AEN + ALRM);
 105   1              LPM_Init();
 106   1              LPM_Enable_Wakeup (RTC);
 107   1              RTC_Alarm = 1;
 108   1      
 109   1              // enable RF transceiver
 110   1              SI4012_SDN = 0;
 111   1      
 112   1              while (1) {
C51 COMPILER V9.53.0.0   EFM8SB10F8G_A_QFN20_MAIN                                          01/14/2018 19:16:25 PAGE 3   

 113   2                      if (RTC_Failure) {
 114   3                              RTC_Failure = 0;
 115   3                              while (1) {
 116   4                                      SCL = !SCL;
 117   4                              }
 118   3                      }
 119   2      
 120   2                      if (RTC_Alarm) {
 121   3                              RTC_Alarm = 0;
 122   3                      }
 123   2      
 124   2                      switch (state) {
 125   3                      case 0:
 126   3                              SI4012_SDN = 0;
 127   3      
 128   3                              si4012_change_state();
 129   3                              for (delayi = 100000; delayi > 0; delayi--)
 130   3                                      ;
 131   3      
 132   3                              si4012_init();
 133   3      
 134   3      #ifdef UHOME_TEMP
                                      si7055_measure();
              
                                      temp = si7055_read();
                                      dbuf[4] = temp & 0xFF;
                                      dbuf[5] = (temp >> 8) & 0xFF;
              #endif
 141   3      #ifdef UHOME_HUM
 142   3                              temp = si7006_read_hum();
 143   3                              dbuf[8] = temp & 0xFF;
 144   3                              dbuf[9] = (temp >> 8) & 0xFF;
 145   3      
 146   3                              bat = si7006_read_temp();
 147   3                              dbuf[4] = bat & 0xFF;
 148   3                              dbuf[5] = (bat >> 8) & 0xFF;
 149   3      #endif
 150   3      
 151   3                              bat = si4012_get_battery();
 152   3                              dbuf[6] = bat & 0xFF;
 153   3                              dbuf[7] = (bat >> 8) & 0xFF;
 154   3                              break;
 155   3      
 156   3                      case 1:
 157   3                              si4012_led(1);
 158   3                              si4012_set_data(dbuf, UHOME_TXLEN);
 159   3                              si4012_led(0);
 160   3                              si4012_tx_shutdown();
 161   3                              break;
 162   3      
 163   3                      case 2:
 164   3                              for (delayi = UHOME_TX_DELAY; delayi > 0; delayi--)
 165   3                                      ;
 166   3      
 167   3                              SMB0_stop();
 168   3      
 169   3                              SMB0CF = SMB0CF_ENSMB__DISABLED;
 170   3                              SDA = 1;
 171   3                              SCL = 1;
 172   3      
 173   3                              SI4012_SDN = 1;
 174   3      
 175   3                              LPM (SLEEP);
C51 COMPILER V9.53.0.0   EFM8SB10F8G_A_QFN20_MAIN                                          01/14/2018 19:16:25 PAGE 4   

 176   3                              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_INH__SLAVE_DISABLED
 177   3                                              | SMB0CF_ENSMB__ENABLED;
 178   3      
 179   3                              SMB0_reset();
 180   3                              SMB0_init(SMB0_TIMER1, true);
 181   3                              break;
 182   3                      }
 183   2      
 184   2                      state++;
 185   2                      if (state == 3) {
 186   3                              state = 0;
 187   3                      }
 188   2              }
 189   1      }
 190          
 191          // $[Generated Run-time code]
 192          // [Generated Run-time code]$
 193          
 194          // $[SiLabs Startup]
 195          // [SiLabs Startup]$
 196          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    480    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     15       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
